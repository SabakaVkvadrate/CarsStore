@model CarsStore.ViewModel.UserViewModel.UserEditViewModel
@{
    ViewBag.Title = Model.Id > 0 ? "Edit" : "Registration";
}
<h2>@ViewBag.Title</h2>
@using (Html.BeginForm("Edit", "User", FormMethod.Post))
{
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Firstname, new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" }) 
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Lastname, new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Username, new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            A password must contain 6 to 20 characters
            @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
        @if (Session["IsLoggedUserAdmin"] != null)
        {
        <div class="form-group">
            @Html.LabelFor(model => model.IsAdmin, new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.IsAdmin, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IsAdmin)
        </div>
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
@if (Session["LoggedUser"] != null)
{
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
